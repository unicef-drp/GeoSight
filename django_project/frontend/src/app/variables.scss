/* ==========================================================================
   Variables
   ========================================================================== */

/* Settings */
$base-hovered-opacity: 0.5;

/* Colors */
$base-black-color: rgba(0, 0, 0, 0.87);
$base-to-white-color: #eee;
$base-color: var(--primary-color);
$base-color-reverse: #FFFFFF;
$base-alpha-color: #1CABE220;
$base-shadow-box: 0 0 16px 4px rgba(#000000, 0.1);

$navbar-background-color: $base-color;
$navbar-font-color: $base-color-reverse;
$black: #000 !default;
$error: #F00 !default;

/* Fonts */
$root-font-size: 16px;

$base-font-color: $base-color;
$base-font-family: 'Rubik', sans-serif;
$base-font-style: normal;
$base-font-light: 300;
$base-font-regular: 400;
$base-font-medium: 500;
$base-font-bold: 500;
$base-font-weight: $base-font-light;
$base-font-size: 1rem;
$base-line-height: 1.5;

/* Spacing */
$global-spacing: 1rem;

/* Media queries */
$xsmall-range: (0, 543px);
$small-range: (544px, 767px);
$medium-range: (768px, 991px);
$large-range: (992px, 1199px);
$xlarge-range: (1200px);
$screen: "only screen";

/* Box shadow */
$box-shadow: 0 .5rem 1rem rgba($black, .15) !default;
$box-shadow-sm: 0 .125rem .25rem rgba($black, .075) !default;
$box-shadow-lg: 0 1rem 3rem rgba($black, .175) !default;
$box-shadow-inset: inset 0 1px 2px rgba($black, .075) !default;

/* ==========================================================================
   MIXIN
   ========================================================================== */

@mixin media($arg) {
  @if $arg == screen {
    @media #{$screen} {
      @content;
    }
  }
  @if $arg == landscape {
    @media #{$screen} and (orientation: landscape) {
      @content;
    }
  }
  @if $arg == portrait {
    @media #{$screen} and (orientation: portrait) {
      @content;
    }
  }
  @if $arg == xsmall-up {
    @media #{$screen} and (min-width: lower-bound($xsmall-range)) {
      @content;
    }
  }
  @if $arg == xsmall-only {
    @media #{$screen} and (max-width: upper-bound($xsmall-range)) {
      @content;
    }
  }
  @if $arg == small-up {
    @media #{$screen} and (min-width: lower-bound($small-range)) {
      @content;
    }
  }
  @if $arg == small-down {
    @media #{$screen} and (max-width: upper-bound($small-range)) {
      @content;
    }
  }
  @if $arg == small-only {
    @media #{$screen} and (min-width: lower-bound($small-range)) and (max-width: upper-bound($small-range)) {
      @content;
    }
  }
  @if $arg == medium-up {
    @media #{$screen} and (min-width: lower-bound($medium-range)) {
      @content;
    }
  }
  @if $arg == medium-down {
    @media #{$screen} and (max-width: lower-bound($medium-range)) {
      @content;
    }
  }
  @if $arg == medium-only {
    @media #{$screen} and (min-width: lower-bound($medium-range)) and (max-width: upper-bound($medium-range)) {
      @content;
    }
  }
  @if $arg == large-up {
    @media #{$screen} and (min-width: lower-bound($large-range)) {
      @content;
    }
  }
  @if $arg == large-down {
    @media #{$screen} and (max-width: lower-bound($large-range)) {
      @content;
    }
  }
  @if $arg == large-only {
    @media #{$screen} and (min-width: lower-bound($large-range)) and (max-width: upper-bound($large-range)) {
      @content;
    }
  }
  @if $arg == xlarge-up {
    @media #{$screen} and (min-width: lower-bound($xlarge-range)) {
      @content;
    }
  }
  @if $arg == xlarge-only {
    @media #{$screen} and (min-width: lower-bound($xlarge-range)) and (max-width: upper-bound($xlarge-range)) {
      @content;
    }
  }
}

/* ==========================================================================
   Functions
   ========================================================================== */

/**
 * Define ranges for various things, like media queries.
 */
@function lower-bound($range) {
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range, 1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}